apiVersion: batch/v1
kind: Job
metadata:
  name: azure-confidential-image-deletion
  namespace: openshift-sandboxed-containers-operator
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 1
  ttlSecondsAfterFinished: 10
  template:
    metadata:
      name: azure-confidential-image-deletion
    spec:
      containers:
      - name: delete
        image: fedora:39
        securityContext:
          runAsUser: 0 # needed for container mode dnf access
        env:
#          - name: GALLERY_NAME
#            value: "fed39CVMGallery"
          - name: GALLERY_IMAGE_NAME
            value: "cvm-test-fed39-image"
          - name: GALLERY_VERSION
            value: "0.0.1"
          - name: VM_SIZE
            value: "Standard_D2as_v5"
          - name: IMAGE_NAME
            value: "cvm-fed39-image"
          - name: DISABLE_CLOUD_CONFIG
            value: "true"
#          - name: AZURE_STORAGE_ACCOUNT
#            value: "cogpuh109sa"
          - name: AZURE_STORAGE_CONTAINER
            value: "vhd"


        envFrom:
        - secretRef:
            name: peer-pods-secret
        - configMapRef:
            name: peer-pods-cm
            optional: true
        command:
        - /bin/sh
        - -c
        - |
          set -e
          dnf install -y kubernetes-client
          uid=$(kubectl get infrastructure -n cluster -o jsonpath='{.items[*].metadata.uid}') && export sid=${uid:0:6} && echo $sid
          export GALLERY_NAME=${sid}_CVMGallery
          export AZURE_STORAGE_ACCOUNT=${sid}cvmsa
          echo "GALLERY_NAME: ${GALLERY_NAME}" && echo "AZURE_STORAGE_ACCOUNT:${AZURE_STORAGE_ACCOUNT}"
          rpm --import https://packages.microsoft.com/keys/microsoft.asc
          dnf install -y https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm
          yum install -y azure-cli
          PATH="/usr/bin:${PATH}"
          [[ ! "${AZURE_REGION}" ]] && echo "AZURE_REGION is missing" && exit 1
          [[ ! "${AZURE_TENANT_ID}" ]] && echo "AZURE_TENANT_ID is missing" && exit 1
          [[ ! "${AZURE_RESOURCE_GROUP}" ]] && echo "AZURE_RESOURCE_GROUP is missing" && exit 1
          [[ ! "${AZURE_SUBSCRIPTION_ID}" ]] && echo "AZURE_SUBSCRIPTION_ID is missing" && exit 1
          [[ ! "${AZURE_CLIENT_SECRET}" ]] && echo "AZURE_CLIENT_SECRET is missing" && exit 1
          [[ ! "${AZURE_CLIENT_ID}" ]] && echo "AZURE_CLIENT_ID is missing" && exit 1
          az login --service-principal --user=${AZURE_CLIENT_ID} --password=${AZURE_CLIENT_SECRET} --tenant=${AZURE_TENANT_ID}
          echo "Deletes the image"
          az image delete --image-name "${IMAGE_NAME}" --resource-group "${AZURE_RESOURCE_GROUP}"
          echo "Deletes image version"
          az sig image-version delete --resource-group "${AZURE_RESOURCE_GROUP}" --gallery-name "${GALLERY_NAME}" --gallery-image-definition "${GALLERY_IMAGE_NAME}"  --gallery-image-version "${GALLERY_VERSION}"
          az sig image-version wait --deleted --resource-group "${AZURE_RESOURCE_GROUP}" --gallery-name "${GALLERY_NAME}" --gallery-image-definition "${GALLERY_IMAGE_NAME}" --gallery-image-version "${GALLERY_VERSION}"
          echo "Deletes image definition"
          az sig image-definition delete --gallery-name "${GALLERY_NAME}" --resource-group "${AZURE_RESOURCE_GROUP}" --gallery-image-definition "${GALLERY_IMAGE_NAME}"
          az sig image-definition wait --deleted --gallery-name "${GALLERY_NAME}" --resource-group "${AZURE_RESOURCE_GROUP}" --gallery-image-definition "${GALLERY_IMAGE_NAME}"
          echo "Deletes the gallery"
          az sig delete --resource-group "${AZURE_RESOURCE_GROUP}"  --gallery-name "${GALLERY_NAME}"
          export AZURE_STORAGE_KEY=$(az storage account keys list --resource-group $AZURE_RESOURCE_GROUP --account-name $AZURE_STORAGE_ACCOUNT --query "[?keyName=='key1'].{Value:value}" --output tsv) && echo $AZURE_STORAGE_KEY
          echo "Deletes storage container"
          #az storage container delete --account-name $AZURE_STORAGE_ACCOUNT --name "${AZURE_STORAGE_CONTAINER}" --account-key "${AZURE_STORAGE_KEY}"
          echo "Deletes storage account"
          az storage account delete --name "${AZURE_STORAGE_ACCOUNT}"  --resource-group "${AZURE_RESOURCE_GROUP}" -y
          echo "DONE"
      restartPolicy: Never
